{:config-paths ["./com.wsscode/pathom" "configs/fulcro"]
 :lint-as {clojure.test.check.clojure-test/defspec    clojure.core/def
           clojure.test.check.properties/for-all      clojure.core/let
           mount.core/defstate                        clojure.core/def        
           nubank.workspaces.core/defcard             clojure.core/def
           nubank.workspaces.core/deftest             clojure.test/deftest}
 :linters {:unsorted-required-namespaces {:level :warning}
           :invalid-arity                {:level :error}
           :missing-else-branch          {:level :off}
           :consistent-alias             {:level   :warning
                                          :aliases {com.wsscode.async.processing  wap
                                                    clojure.test.check.generators gen
                                                    clojure.test.check.properties prop}}
           :unused-namespace             {:level   :warning
                                          :exclude [com.fulcrologic.guardrails.core
                                                    com.wsscode.async.async-clj
                                                    com.wsscode.async.async-cljs]}
           :unused-referred-var          {:level   :warning
                                          :exclude {com.wsscode.async.async-clj     [let-chan let-chan*
                                                                                     go go-catch go-promise
                                                                                     <! <? <?maybe <!maybe]
                                                    com.wsscode.async.async-cljs    [let-chan let-chan* <!p
                                                                                     go go-catch go-promise
                                                                                     <! <? <?maybe <!maybe]
                                                    com.fulcrologic.guardrails.core [>def >defn >fdef => | <- ?]
                                                    clojure.test                    [deftest is are run-tests testing]
                                                    cljs.test                       [deftest is are run-tests testing]}}}}

